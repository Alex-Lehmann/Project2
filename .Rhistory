cutEnd <- str_split(readTextCurrent, "- 30 -")[[1]][1]
cutEnd <- str_split(cutEnd, "related products\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "associated links\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "contacts\r\n")[[1]][1]
cutFinal <- str_squish(str_replace_all(cutEnd,"quick facts\r\n", ""))
checkIndex <- 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
while((is.na(finalCut)==TRUE)&(checkIndex < length(cutters))){
checkIndex <- checkIndex + 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
}
#readTextHead <- readCurrent %>%
#  html_node(css = "body > main > div:nth-child(2) > div:nth-child(2) > p:nth-child(1)") %>%
#  html_text() %>%
#  tolower()
#if(is.na(readTextHead)) {
#  readTextHead <- readCurrent %>%
#    html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
#    html_text() %>%
#    tolower()
#}
#cutBegin <- str_split(readTextCurrent,readTextHead)[[1]][2]
release[currentLabel] <- finalCut
}
View(release)
htmlLabelsStore[78]
htmlLabelsStore[105]
htmlLabelsStore[110]
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada Rrevenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
"(quebec), January 28, 2017",
"canada revenue agency news release"
)
release <- rep(NA,length(htmlLabelsStore))
for(currentLabel in 1:length(htmlLabelsStore)){
url_data <- htmlLabelsStore[currentLabel]
readCurrent <- url_data %>%
read_html()
readTextCurrent <- readCurrent %>%
#html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
html_text() %>%
tolower()
cutEnd <- str_split(readTextCurrent, "- 30 -")[[1]][1]
cutEnd <- str_split(cutEnd, "related products\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "associated links\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "contacts\r\n")[[1]][1]
cutFinal <- str_squish(str_replace_all(cutEnd,"quick facts\r\n", ""))
checkIndex <- 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
while((is.na(finalCut)==TRUE)&(checkIndex < length(cutters))){
checkIndex <- checkIndex + 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
}
#readTextHead <- readCurrent %>%
#  html_node(css = "body > main > div:nth-child(2) > div:nth-child(2) > p:nth-child(1)") %>%
#  html_text() %>%
#  tolower()
#if(is.na(readTextHead)) {
#  readTextHead <- readCurrent %>%
#    html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
#    html_text() %>%
#    tolower()
#}
#cutBegin <- str_split(readTextCurrent,readTextHead)[[1]][2]
release[currentLabel] <- finalCut
}
View(release)
htmlLabelsStore[105]
htmlLabelsStore[110]
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada revenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
"(quebec), january 28, 2017",
"canada revenue agency news release"
)
release <- rep(NA,length(htmlLabelsStore))
for(currentLabel in 1:length(htmlLabelsStore)){
url_data <- htmlLabelsStore[currentLabel]
readCurrent <- url_data %>%
read_html()
readTextCurrent <- readCurrent %>%
#html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
html_text() %>%
tolower()
cutEnd <- str_split(readTextCurrent, "- 30 -")[[1]][1]
cutEnd <- str_split(cutEnd, "related products\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "associated links\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "contacts\r\n")[[1]][1]
cutFinal <- str_squish(str_replace_all(cutEnd,"quick facts\r\n", ""))
checkIndex <- 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
while((is.na(finalCut)==TRUE)&(checkIndex < length(cutters))){
checkIndex <- checkIndex + 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
}
#readTextHead <- readCurrent %>%
#  html_node(css = "body > main > div:nth-child(2) > div:nth-child(2) > p:nth-child(1)") %>%
#  html_text() %>%
#  tolower()
#if(is.na(readTextHead)) {
#  readTextHead <- readCurrent %>%
#    html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
#    html_text() %>%
#    tolower()
#}
#cutBegin <- str_split(readTextCurrent,readTextHead)[[1]][2]
release[currentLabel] <- finalCut
}
View(release)
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada revenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
"/(quebec/), january 28, 2017",
"canada revenue agency news release"
)
release <- rep(NA,length(htmlLabelsStore))
for(currentLabel in 1:length(htmlLabelsStore)){
url_data <- htmlLabelsStore[currentLabel]
readCurrent <- url_data %>%
read_html()
readTextCurrent <- readCurrent %>%
#html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
html_text() %>%
tolower()
cutEnd <- str_split(readTextCurrent, "- 30 -")[[1]][1]
cutEnd <- str_split(cutEnd, "related products\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "associated links\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "contacts\r\n")[[1]][1]
cutFinal <- str_squish(str_replace_all(cutEnd,"quick facts\r\n", ""))
checkIndex <- 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
while((is.na(finalCut)==TRUE)&(checkIndex < length(cutters))){
checkIndex <- checkIndex + 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
}
#readTextHead <- readCurrent %>%
#  html_node(css = "body > main > div:nth-child(2) > div:nth-child(2) > p:nth-child(1)") %>%
#  html_text() %>%
#  tolower()
#if(is.na(readTextHead)) {
#  readTextHead <- readCurrent %>%
#    html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
#    html_text() %>%
#    tolower()
#}
#cutBegin <- str_split(readTextCurrent,readTextHead)[[1]][2]
release[currentLabel] <- finalCut
}
View(release)
htmlLabelsStore[113]
htmlLabelsStore[114]
htmlLabelsStore[119]
htmlLabelsStore[12]
htmlLabelsStore[122]
htmlLabelsStore[123]
htmlLabelsStore[124]
htmlLabelsStore[129]
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada revenue agency",
"ottawa, on - canada revenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"ottawa, ontario – canada revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
"/(quebec/), january 28, 2017",
"gatineau, qc canada revenue agency",
"toronto, ontario canada revenue agency",
"canada revenue agency news release"
)
release <- rep(NA,length(htmlLabelsStore))
for(currentLabel in 1:length(htmlLabelsStore)){
url_data <- htmlLabelsStore[currentLabel]
readCurrent <- url_data %>%
read_html()
readTextCurrent <- readCurrent %>%
#html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
html_text() %>%
tolower()
cutEnd <- str_split(readTextCurrent, "- 30 -")[[1]][1]
cutEnd <- str_split(cutEnd, "related products\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "associated links\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "contacts\r\n")[[1]][1]
cutFinal <- str_squish(str_replace_all(cutEnd,"quick facts\r\n", ""))
checkIndex <- 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
while((is.na(finalCut)==TRUE)&(checkIndex < length(cutters))){
checkIndex <- checkIndex + 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
}
#readTextHead <- readCurrent %>%
#  html_node(css = "body > main > div:nth-child(2) > div:nth-child(2) > p:nth-child(1)") %>%
#  html_text() %>%
#  tolower()
#if(is.na(readTextHead)) {
#  readTextHead <- readCurrent %>%
#    html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
#    html_text() %>%
#    tolower()
#}
#cutBegin <- str_split(readTextCurrent,readTextHead)[[1]][2]
release[currentLabel] <- finalCut
}
View(release)
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada revenue agency",
"ottawa, on - canada revenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"ottawa, ontario – canada revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
"\(quebec\), january 28, 2017",
"gatineau, qc canada revenue agency",
"toronto, ontario canada revenue agency",
"canada revenue agency news release"
)
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada revenue agency",
"ottawa, on - canada revenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"ottawa, ontario – canada revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
"\(quebec\), january 28, 2017",
"gatineau, qc canada revenue agency",
"toronto, ontario canada revenue agency",
"canada revenue agency news release"
)
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada revenue agency",
"ottawa, on - canada revenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"ottawa, ontario – canada revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
", january 28, 2017",
"gatineau, qc canada revenue agency",
"toronto, ontario canada revenue agency",
"canada revenue agency news release"
)
release <- rep(NA,length(htmlLabelsStore))
for(currentLabel in 1:length(htmlLabelsStore)){
url_data <- htmlLabelsStore[currentLabel]
readCurrent <- url_data %>%
read_html()
readTextCurrent <- readCurrent %>%
#html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
html_text() %>%
tolower()
cutEnd <- str_split(readTextCurrent, "- 30 -")[[1]][1]
cutEnd <- str_split(cutEnd, "related products\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "associated links\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "contacts\r\n")[[1]][1]
cutFinal <- str_squish(str_replace_all(cutEnd,"quick facts\r\n", ""))
checkIndex <- 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
while((is.na(finalCut)==TRUE)&(checkIndex < length(cutters))){
checkIndex <- checkIndex + 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
}
#readTextHead <- readCurrent %>%
#  html_node(css = "body > main > div:nth-child(2) > div:nth-child(2) > p:nth-child(1)") %>%
#  html_text() %>%
#  tolower()
#if(is.na(readTextHead)) {
#  readTextHead <- readCurrent %>%
#    html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
#    html_text() %>%
#    tolower()
#}
#cutBegin <- str_split(readTextCurrent,readTextHead)[[1]][2]
release[currentLabel] <- finalCut
}
View(release)
htmlLabelsStore[133]
htmlLabelsStore[134]
htmlLabelsStore[136]
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada revenue agency",
"ottawa, on - canada revenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"ottawa, ontario – canada revenue agency",
"ottawa, ontario revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
", january 28, 2017",
"gatineau, qc canada revenue agency",
"gatineau, quebec canada revenue agency",
", quebec canada revenue agency",
"toronto, ontario canada revenue agency",
"canada revenue agency news release"
)
release <- rep(NA,length(htmlLabelsStore))
for(currentLabel in 1:length(htmlLabelsStore)){
url_data <- htmlLabelsStore[currentLabel]
readCurrent <- url_data %>%
read_html()
readTextCurrent <- readCurrent %>%
#html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
html_text() %>%
tolower()
cutEnd <- str_split(readTextCurrent, "- 30 -")[[1]][1]
cutEnd <- str_split(cutEnd, "related products\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "associated links\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "contacts\r\n")[[1]][1]
cutFinal <- str_squish(str_replace_all(cutEnd,"quick facts\r\n", ""))
checkIndex <- 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
while((is.na(finalCut)==TRUE)&(checkIndex < length(cutters))){
checkIndex <- checkIndex + 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
}
#readTextHead <- readCurrent %>%
#  html_node(css = "body > main > div:nth-child(2) > div:nth-child(2) > p:nth-child(1)") %>%
#  html_text() %>%
#  tolower()
#if(is.na(readTextHead)) {
#  readTextHead <- readCurrent %>%
#    html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
#    html_text() %>%
#    tolower()
#}
#cutBegin <- str_split(readTextCurrent,readTextHead)[[1]][2]
release[currentLabel] <- finalCut
}
View(release)
htmlLabelsStore[113]
cutters <- c(
"ottawa, ontario canada revenue agency",
"ottawa canada revenue agency",
"ottawa, on canada revenue agency",
"ottawa, ontario - canada revenue agency",
"ottawa, on - canada revenue agency",
"summerside, prince edward island canada revenue agency",
"ottawa - canada revenue agency",
"ottawa, ontario – canada revenue agency",
"ottawa, ontario revenue agency",
"vancouver canada revenue agency",
"vancouver, december 8, 2017 -",
", january 28, 2017",
"gatineau, qc canada revenue agency",
"gatineau, quebec canada revenue agency",
", quebec canada revenue agency",
"toronto, ontario canada revenue agency",
"news release the",
"canada revenue agency news release"
)
release <- rep(NA,length(htmlLabelsStore))
for(currentLabel in 1:length(htmlLabelsStore)){
url_data <- htmlLabelsStore[currentLabel]
readCurrent <- url_data %>%
read_html()
readTextCurrent <- readCurrent %>%
#html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
html_text() %>%
tolower()
cutEnd <- str_split(readTextCurrent, "- 30 -")[[1]][1]
cutEnd <- str_split(cutEnd, "related products\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "associated links\r\n")[[1]][1]
cutEnd <- str_split(cutEnd, "contacts\r\n")[[1]][1]
cutFinal <- str_squish(str_replace_all(cutEnd,"quick facts\r\n", ""))
checkIndex <- 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
while((is.na(finalCut)==TRUE)&(checkIndex < length(cutters))){
checkIndex <- checkIndex + 1
finalCut <- str_split(cutFinal, cutters[checkIndex])[[1]][2]
}
#readTextHead <- readCurrent %>%
#  html_node(css = "body > main > div:nth-child(2) > div:nth-child(2) > p:nth-child(1)") %>%
#  html_text() %>%
#  tolower()
#if(is.na(readTextHead)) {
#  readTextHead <- readCurrent %>%
#    html_node(css = "#news-release-container > div.mrgn-bttm-md > div > div > div > p:nth-child(1)") %>%
#    html_text() %>%
#    tolower()
#}
#cutBegin <- str_split(readTextCurrent,readTextHead)[[1]][2]
release[currentLabel] <- finalCut
}
View(release)
allReleases <- paste(release, sep=" \n ")
allReleases
View(allReleases)
allReleases <- paste(release, collapse = " \n ")
View(allReleases)
allReleases
allReleases %>%
unnest_tokens()
library(rvest)
library(stringr)
library(tidyverse)
library(sentimentr)
library(xlsx)
library(tidyr)
library(tidytext)
library(tidyverse)
library(dplyr)
allReleases %>%
unnest_tokens()
allReleases %>%
unnest_tokens(word)
releaseTibble <- tibble(1:length(release),release)
releaseTibble
#allReleases <- paste(release, collapse = " \n ")
article <- 1:length(release)
releaseTibble <- tibble(article,release)
releaseTibble %>%
unnest_tokens(word,release)
# Initialize libraries
## Standard
library(xlsx)
library(tidyr)
library(tidytext)
library(tidyverse)
library(dplyr)
## Words list
# install.packages("qdapDictionaries")
library(qdapDictionaries)
# Read in file
dirIn <- "/Users/johnbrooks/Desktop/Course Work/STAT5702/Project2"
fileIn <- "Redacted FAB_Project_raw_data_Clean EXCEL Dec.23"
# Create Path
pathIn <- paste(dirIn,"/",fileIn,".xlsx",sep="")
# Read in data
rawData <- read.xlsx(pathIn,1)
# Process columns
columnNamesStore <- names(rawData)
cleanData <- rawData
names(cleanData) <- paste("c",1:ncol(cleanData),sep="_")
View(cleanData)
nonCatColumns <- c(14,
22,
30,
40,
41,
43,
45,
46,
48)
# Scrape free text columns
procData <- cleanData[,c(1,2,nonCatColumns)]
newNames <- names(procData)
selectNames  <- newNames[c(3:length(newNames))]
######### Translate here
# Pivot the data
pivtData <- procData %>%
# Select only those columns with the ID and the phrases
select(c(1,2,selectNames)) %>%
# Pivot the data to be cataloged by ID and question index
pivot_longer(selectNames,names_to = "column",values_to = "response")
pivtData
selectNames
procData
# Pivot the data
pivtData <- procData %>%
# Select only those columns with the ID and the phrases
select(c("c_1","c_2",selectNames)) %>%
# Pivot the data to be cataloged by ID and question index
pivot_longer(selectNames,names_to = "column",values_to = "response")
pivtData
# Prepare data for translation
forTranslation <- pivtData %>%
# Take out french
filter(c_2 == "FR")
forTranslation
# Count Characters
counterChar <- 0
for(currentStr in forTranslation$response) {
counterChar <- counterChar + str_length(currentStr)
}
counterChar
install.packages("googleLanguageR")
library(googleLanguageR)
